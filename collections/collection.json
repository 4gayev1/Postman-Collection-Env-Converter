{
  "info": {
    "_postman_id": "38359403-2fe8-4602-a101-08eb012f225e",
    "name": "Account and card operations",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "19992298"
  },
  "item": [
    {
      "name": "Creating card account and ordering card",
      "item": [
        {
          "name": "Find cmsId with cif",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successfully finding cmsId\", function () {",
                  "    pm.expect(pm.response.json()[0]).to.have.property(\"id\");",
                  "    const cmsId = pm.response.json()[0].id;",
                  "    pm.collectionVariables.set(\"cmsId\",cmsId);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-repo",
                "value": "get_account_transfers_accumulation_{uuid}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"cif\": \"1208628\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{envSubdomain}}{{baseURL}}/api/card-customer/customers/search",
              "host": ["{{alma}}{{armud}}"],
              "path": ["api", "card-customer", "customers", "search"]
            }
          },
          "response": []
        },
        {
          "name": "Create card account with cmsId",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successfully creating accountNumber\", function () {",
                  "    pm.expect(pm.response.json()).to.have.property(\"accountNumber\");",
                  "    const accountNmbr = pm.response.json().accountNumber;",
                  "    pm.collectionVariables.set(\"accountNmbr\",accountNmbr);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-repo",
                "value": "get_account_transfers_accumulation_{uuid}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": {{cmsId}},\n  \"currency\": 944,\n  \"branchCode\": \"110\",\n  \"classId\": 3,\n  \"status\": \"OPEN\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{envSubdomain}}{{baseURL}}/api/card-accounts",
              "host": ["{{banan}}{{sdfdsfsdf}}"],
              "path": ["api", "card-accounts"]
            }
          },
          "response": []
        },
        {
          "name": "Order card",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "const moment = require('moment');",
                  "const cardExprDate = moment().add(5,'y').format(\"YYYY-MM-DD\");",
                  "pm.collectionVariables.set(\"cardExprDate\", JSON.stringify(cardExprDate));",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successfully ordering card\", function () {",
                  "    pm.expect(pm.response.json()).to.have.property(\"uid\");",
                  "    const uid = pm.response.json().uid; ",
                  "    pm.collectionVariables.set(\"uid\",uid);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-repo",
                "value": "get_account_transfers_accumulation_{uuid}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prefix\": \"41697388\",\n  \"nameOnCard\": \"NAME SURNAME\",\n  \"branchCode\": \"100\",\n  \"status\": \"OPEN\",\n  \"state\": \"ISSUED\",\n  \"customerId\": 10435614,\n  \"primaryAccountNumber\": {{accountNmbr}},\n  \"expiryDate\": {{cardExprDate}},\n  \"profileId\": 340,\n  \"issuePriority\": 0,\n  \"limitCurrency\": 944,\n  \"additionalInfo\": \"DKR-OMS\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{envSubdomain}}{{baseURL}}/api/cards?async=false",
              "host": ["{{sdfsdfsdf}}{{sdfsdfsdfdsf}}"],
              "path": ["api", "cards"],
              "query": [{ "key": "async", "value": "false" }]
            }
          },
          "response": []
        },
        {
          "name": "Get  all  property of created card",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "",
                  "pm.test(\"Successfully getting card data\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.have.property(\"uid\");",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"uid\", pm.response.json().uid);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-repo",
                "value": "get_account_transfers_accumulation_{uuid}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{envSubdomain}}{{baseURL}}/api/cards/{{uid}}?resultType=ACCOUNT",
              "host": ["{{sdfsdfsdfs}}{{basdfsdfsdfseURL}}"],
              "path": ["api", "cards", "{{uid}}"],
              "query": [{ "key": "resultType", "value": "ACCOUNT" }]
            }
          },
          "response": []
        },
        {
          "name": "See whole PAN",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://pre.atlas.kapitalbank.az/api/cards/{{uid}}/pan",
              "protocol": "https",
              "host": ["pre", "atlas", "kapitalbank", "az"],
              "path": ["api", "cards", "{{uid}}", "pan"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create CİF",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Succesfully creating CIF\", function () {",
              "    pm.expect(pm.response.json()).to.have.property('cif');",
              "    pm.response.to.have.status(200);",
              "",
              "    pm.collectionVariables.set(\"cif\",pm.response.json().cif)",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": { "exec": [""], "type": "text/javascript", "packages": {} }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-repo",
            "value": "get_account_transfers_accumulation_{uuid}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"latinFullName\": \"Almalı Almayev\",\n  \"gender\": \"MALE\",\n  \"married\": true,\n  \"birthDate\": \"2003-10-03\",\n  \"birthCity\": \"Alma\",\n  \"birthPlace\": \"Alma\",\n  \"citizen\": true,\n  \"email\": \"almayevalma@gmail.com\",\n  \"entrepreneur\": true,\n  \"fullName\": \"Almalı Almayev\",\n  \"firstName\": \"Almalı\",\n  \"lastName\": \"Almayev\"\n}",
          "options": { "raw": { "language": "json" } }
        },
        "url": {
          "raw": "{{envSubdomain}}{{baseURL}}/api/customers",
          "host": ["{{envSubdomain}}{{baseURL}}"],
          "path": ["api", "customers"]
        }
      },
      "response": []
    },
    {
      "name": "Create account",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.collectionVariables.set(\"uuid\", pm.variables.replaceIn(\"{{$guid}}\"));"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Succesfully creating account\",function(){",
              "    pm.expect(pm.response.json().items[0]).to.have.property(\"accountNumber\");",
              "})"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-repo",
            "value": "get_account_transfers_accumulation_{uuid}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"processMode\": \"SYNC\",\n    \"uuid\": \"{{uuid}}\",\n    \"cif\": \"{{cif}}\",\n    \"currency\": \"944\",\n    \"branchCode\": \"102\",\n    \"description\": \"alma\",\n    \"entrepreneur\": true\n}",
          "options": { "raw": { "language": "json" } }
        },
        "url": {
          "raw": "{{envSubdomain}}{{baseURL}}/api/v2/operations/account",
          "host": ["{{envSubdomain}}{{baseURL}}"],
          "path": ["api", "v2", "operations", "account"]
        }
      },
      "response": []
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [{ "key": "token", "value": "{{accessToken}}", "type": "string" }]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          "const envSubdomain = pm.environment.get(\"envSubdomain\")",
          "const tokenUrl = pm.environment.get(\"tokenUrl\");",
          "const clientSecret = pm.environment.get(\"client_secret\");",
          "const clientId = pm.environment.get(\"client_id\");",
          "const grantType = pm.environment.get(\"grant_type\");",
          "const scope = pm.environment.get(\"scope\");",
          "",
          "pm.sendRequest({",
          "    url: `${envSubdomain}${tokenUrl}`,",
          "    method: 'POST',",
          "    body: {",
          "        mode: 'urlencoded',",
          "        urlencoded: [",
          "            { key: 'client_secret', value: clientSecret }, ",
          "            { key: 'client_id', value: clientId },",
          "            { key: 'grant_type', value: grantType },",
          "            { key: 'scope', value: scope }",
          "        ]",
          "    }",
          "}, function (err, response) {",
          "    pm.environment.set(\"accessToken\", `${response.json()[\"access_token\"]}`);",
          "});"
        ]
      }
    },
    {
      "listen": "test",
      "script": { "type": "text/javascript", "packages": {}, "exec": [""] }
    }
  ],
  "variable": [
    { "key": "baseURL", "value": "atlas.kapitalbank.az", "type": "string" },
    {
      "key": "client_secret",
      "value": "1Tt49RC4NuMl1Ma3peQp7jhetjQXLk8s",
      "type": "string"
    },
    { "key": "client_id", "value": "qa-developers", "type": "string" },
    { "key": "grant_type", "value": "client_credentials", "type": "string" },
    { "key": "scope", "value": "openid", "type": "string" },
    {
      "key": "tokenUrl",
      "value": "atlas-keycloak.kapitalbank.az/auth/realms/Atlas/protocol/openid-connect/token",
      "type": "string"
    },
    { "key": "accessToken", "value": "" },
    { "key": "envSubdomain", "value": "armud.", "type": "string" },
    { "key": "cmsId", "value": "" },
    { "key": "accountNmbr", "value": "" },
    { "key": "cardExprDate", "value": "" },
    { "key": "uid", "value": "" },
    { "key": "uuid", "value": "", "type": "string" },
    { "key": "cif", "value": "" },
    { "key": "testKey", "value": "IN", "type": "string" },
    { "key": "alma", "value": "" }
  ]
}
